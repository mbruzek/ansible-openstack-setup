---
- name: Configure openshift-ansible-contrib to run in this OpenStack environment
  hosts: target-host
  vars:
    env_id: "{{ lookup('env', 'env_id') | default('scale-ci', true) }}"
    keypair_name: "{{ lookup('env', 'keypair_name') | default('ci_keypair', true) }}"
    # The openshift-ansible repository optional, if blank the code on the image is used.
    openshift_ansible_repo: "{{ lookup('env', 'openshift_ansible_repo') }}"
    # The version can be a branch, tag, or hash for testing pull requests.
    openshift_ansible_version: "{{ lookup('env', 'openshift_ansible_version') | default('HEAD', true) }}"
    # The openshift-ansible-contrib repository to use (required).
    openshift_ansible_contrib_repo: "{{ lookup('env', 'openshift_ansible_contrib_repo') | default('https://github.com/openshift/openshift-ansible-contrib', true) }}"
    # This version can be a branch, tag, or hash for testing pull requests.
    openshift_ansible_contrib_version: "{{ lookup('env', 'openshift_ansible_contrib_version') | default('HEAD', true) }}"
    openstack_location: "{{ lookup('env', 'openstack_client_path' ) | default('/usr/bin/openstack', true) }}"
    openstack_rc: "{{ lookup('env', 'openstack_rc_path') | default('keystonerc', true) }}"
    public_network_name: "{{ lookup('env', 'public_network_name') | default('public_network', true) }}"
    public_subnet_name: "{{ lookup('env', 'public_subnet_name') | default('public_subnet', true) }}"

  tasks:
    # Remove all old directories and files.
    - name: Removing any old directories or files from previous attempts
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ ansible_user_dir }}/keystonerc"
        - "openshift-ansible"
        - "openshift-ansible-contrib"
        - "inventory"
        - "ansible.cfg"

    # Create a symbolic link to the openshift-ansible directory.
    - name: Creating a symbolic link to the openshift-ansible directory
      file:
        src: /root/openshift-ansible
        path: "{{ ansible_user_dir }}/openshift-ansible"
        state: link
      become: true
      when: openshift_ansible_repo == ""

    # Print the values that will be used for the openshift-ansible repository.
    - name: Printing the values used to clone openshift-ansible
      debug:
        msg: "openshift-ansible repository: {{ openshift_ansible_repo }} {{ openshift_ansible_version }}"
      when: openshift_ansible_repo != ""

    # Get a fresh clone of the openshift-ansible GitHub project.
    - name: Cloning the openshift-ansible repository
      git:
        dest: "{{ ansible_user_dir }}/openshift-ansible"
        # Specify a different repo to test someone else's repository.
        repo: "{{ openshift_ansible_repo }}"
        # Specify a version for a different branch, tag, or hash to verify PRs.
        version: "{{ openshift_ansible_version }}"
      when: openshift_ansible_repo != ""

    # Print the values that will be used for openshift-ansible-contrib.
    - name: Printing the values used to clone openshift-ansible-contrib
      debug:
        msg: "openshift-ansible-contrib repository: {{ openshift_ansible_contrib_repo }} {{ openshift_ansible_contrib_version }}"

    # Get a fresh clone of the openshift-ansible-contrib GitHub project.
    - name: Cloning the openshift-ansible-contrib repository
      git:
        dest: "{{ ansible_user_dir }}/openshift-ansible-contrib"
        # Specify a different repo to test someone else's repository.
        repo: "{{ openshift_ansible_contrib_repo }}"
        # Specify a version for a different branch, tag, or hash to verify PRs.
        version: "{{ openshift_ansible_contrib_version }}"

    # Set the contrib playbooks provisioning openstack path.
    - name: Creating the openshift_openstack directory variable
      set_fact:
        openshift_openstack_dir: "openshift-ansible-contrib/playbooks/provisioning/openstack"

    # Install the ansible-galaxy requirements.
    - name: Running the ansible-galaxy install command
      command: "ansible-galaxy install -r {{ openshift_openstack_dir }}/galaxy-requirements.yaml -p openshift-ansible-contrib/roles"

    # Copy the remote sample-inventory to another remote directory.
    - name: Copying the sample inventory directory
      # Note: The copy module does not support recurisve copy of remote sources.
      command: cp -r {{ openshift_openstack_dir }}/sample-inventory/ inventory

    # Copy the Ansible configuration file from the inventory directory.
    - name: Copying the Ansible configuration file from inventory
      copy:
        remote_src: true
        src: inventory/ansible.cfg
        dest: ./ansible.cfg

    # Remove the ansible.cfg file.
    - name: Removing the Ansible configuration file
      file:
        path: inventory/ansible.cfg
        state: absent

    # Create a .ssh directory if one does not already exist.
    - name: Creating the .ssh directory
      file:
        path: "{{ ansible_user_dir }}/.ssh"
        state: directory
        mode: 0700

    # Copy the private key so this server can access the OpenShift servers.
    - name: Copying the private key to the system
      copy:
        src: "{{ ansible_private_key_file }}"
        dest: "{{ ansible_user_dir }}/.ssh/id_rsa"
        mode: 0600

    # Copy the public key so this server.
    - name: Copying the public key to the system
      copy:
        src: "{{ ansible_public_key_file }}"
        dest: "{{ ansible_user_dir }}/.ssh/id_rsa.pub"
        mode: 0644

    # Copy the rc file so the host can talk to OpenStack.
    - name: Copying the OpenStack rc file to {{ ansible_user_dir }}/keystonerc
      copy:
        dest: "{{ ansible_user_dir }}/keystonerc"
        src: "{{ openstack_rc }}"

    # Check for the existance of the OpenStack client.
    - name: Checking for the OpenStack client
      stat:
        path: "{{ openstack_location }}"
      register: openstack_path

    # Fail when the openstack client path does not exist.
    - name: Aborting because the OpenStack client does not exist
      fail:
        msg: "The openstack client path '{{ openstack_location }}' is invalid."
      when: openstack_path.stat.exists == false

    # The openstack variable includes the rc file and the path to the OpenStack client.
    - name: Setting openstack variable to source the rc file and contain path to client
      set_fact:
        openstack: "source {{ ansible_user_dir }}/keystonerc; {{ openstack_location }}"

    # Get the public DNS servers from OpenStack.
    - name: Getting the public DNS servers from OpenStack
      shell: "{{ openstack }} subnet show {{ public_subnet_name }} --format value -c dns_nameservers"
      register: dns_servers

    # Format the output from the command to a csv list.
    - name: Creating a variable with comma separated list of DNS servers
      set_fact:
        public_dns_nameservers: "{{ dns_servers.stdout }}"

    # Render the all.yml template, replacing variables with current values.
    - name: Rendering the all.yml template
      template:
        src: templates/all.yml.j2
        dest: inventory/group_vars/all.yml

    # Copy the OSEv3.yml file, replacing the existing OSEv3.yml file.
    - name: Copying the OSEv3.yml template
      copy:
        src: templates/OSEv3.yml
        dest: inventory/group_vars/OSEv3.yml

    # Set a variable for the ansible-playbook.
    - name: Setting ansible-playbook variable
      set_fact:
        ansible_playbook: "source {{ ansible_user_dir }}/keystonerc; ansible-playbook"

    # Run the Ansible playbook that installs OpenStack.
    - name: Running the OpenStack install
      shell: "{{ ansible_playbook }} {{ openshift_openstack_dir }}/provision.yaml 2>&1 > openstack_provision_log.txt"
      args:
        # Use bash to get the posix style redirects.
        executable: /bin/bash

    # Run the Ansible playbook that installs OpenShift.
    - name: Running the OpenShift install
      shell: "{{ ansible_playbook }} openshift-ansible/playbooks/byo/config.yml 2>&1 > openshift_install_log.txt"
      args:
        # Use bash to get the posix style redirects.
        executable: /bin/bash

    # Print out the log file locations.
    - name: Printing out the log file locations
      debug:
        msg: "Installation complete, check the openstack_provision_log.txt and openshift_install_log.txt for errors."
